version: '3.8'

x-bitech_api-variables: &bitech_api-variables
  DB_USER: postgres
  DB_PASSWORD: postgres
  DB_NAME: bitech_api
  DB_HOST: api_database
  DB_PORT: 5432
  PRODUCTION: false
  METRICS: false
  SECRET_KEY: ${SECRET_KEY}
  YOOKASSA_ACCOUNT_ID: ${YOOKASSA_ACCOUNT_ID}
  YOOKASSA_SECRET_KEY: ${YOOKASSA_SECRET_KEY}
  MINIO_ENDPOINT_URL: ${MINIO_ENDPOINT_URL}
  S3_WORKER_API: ${S3_WORKER_API}
  YAGPT_KEY: ${YAGPT_KEY}
  YAGPT_MODEL_URI: ${YAGPT_MODEL_URI}
  SMS_EMAIL: ${SMS_EMAIL}
  SMS_KEY: ${SMS_KEY}
  MONGODB_URL: mongodb://mongodb_database:27017

services:
  api:
    build: .
    command: python main.py
    ports:
      - '8078:80'
    environment:
      <<: *bitech_api-variables
    volumes:
      - ./:/app
    restart: always
    depends_on:
      - api_database
      - mongodb_database

    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - biwork-backend

  api_database:
    image: postgres:14-alpine
    command: postgres -N 100
    volumes:
      - api_database_volume:/var/lib/postgresql/data/
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=bitech_api
    ports:
      - '54325:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - biwork-backend

  mongodb_database:
    image: mongo:6.0.9
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_volume:/data/db

    networks:
      - biwork-backend


volumes:
  api_database_volume:
  mongodb_data_volume:


